<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">


	<resultMap type="Board" id="board_rm">
		<!-- DB의 기본 키(복합키면 여러 개 작성) -->
		<id property="boardNo" column="BOARD_NO" />

		<!-- DB의 일반 컬럼들 -->
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardText" column="BOARD_TEXT" />
		<result property="createDate" column="CREATE_DATE" />
		<result property="boardUpdate" column="UPDATE_DATE" />
		<result property="readCount" column="READ_COUNT" />
		<result property="boardCode" column="BOARD_CODE" />
		<result property="boardDelete" column="BOARD_DELETE" />


		<!-- JOIN -->
		<result property="commentCount" column="COMMENT_COUNT" />
		<result property="likeCount" column="LIKE_COUNT" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="profileImage" column="PROFILE_IMG" />
		<result property="countryNo" column="COUNTRY_NO" />
		<result property="tagNo" column="TAG_NO" />
		<result property="tagContent" column="TAG_CONTENT" />
		<result property="thumbnail" column="THUMBNAIL" />
		<result property="boardName" column="BOARD_NAME" />
		<result property="countryName" column="COUNTRY_NAME" />






		<collection property="imageList" select="selectImageList"
			column="BOARD_NO" javaType="java.util.ArrayList" ofType="BoardImage" />

		<collection property="replyList" select="selectReplyList"
			column="BOARD_NO" javaType="java.util.ArrayList" ofType="Reply" />
	</resultMap>

	<!--리플 -->
	<resultMap type="Reply" id="reply_rm">
		<id property="replyNo" column="REPLY_NO" />
		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="replyDate" column="REPLY_DATE" />
		<result property="updateDate" column="REPLY_UPDATE" />
		<result property="replyDelete" column="REPLY_DELETE" />
		<result property="parentReplyNo" column="PARENT_REPLY_NO" />
		<result property="boardNo" column="BOARD_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="profileImage" column="PROFILE_IMG" />


	</resultMap>


	<!-- BoardImage resultMap -->
	<resultMap type="BoardImage" id="boardImage_rm">
		<id property="imageNo" column="IMG_NO" />
		<result property="imagePath" column="IMG_PATH" />
		<result property="imageReName" column="IMG_RENAME" />
		<result property="imageOriginal" column="IMG_ORIGINAL" />
		<result property="imageOrder" column="IMG_ORDER" />
		<result property="boardNo" column="BOARD_NO" />

	</resultMap>



	<!-- 게시판 리스트 -->
	<select id="selectBoardTypeList" resultType="map">
		SELECT * FROM
		"BOARD_TYPE" ORDER BY 1
	</select>

	<!-- 나라 게시판 리스트 -->
	<select id="selectCountryList" resultType="map">
		SELECT * FROM COUNTRY
		ORDER BY 1
	</select>

	<!-- 특정 게시판의 삭제되지 않은 게시글 수 조회 -->
	<select id="listCount" parameterType="int" resultType="int">
		SELECT
		COUNT(*) FROM "BOARD"
		WHERE BOARD_DELETE='N'
		AND
		BOARD_CODE=#{boardCode}
	</select>

	<!-- 나라게시판의 삭제되지 않은 게시글 수 -->
	<select id="countryCount" parameterType="int" resultType="int">
		SELECT
		COUNT(*) FROM "BOARD"
		WHERE BOARD_DELETE='N'
		AND BOARD_CODE=1
		AND
		COUNTRY_NO = #{countryNo}
	</select>

	<!-- 게시글 리스트 -->
	<select id="selectBoardList" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,TAG_CONTENT,
	<![CDATA[
	CASE  
		WHEN SYSDATE - CREATE_DATE < 1/24/60
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24 * 60 * 60 ) || '초 전'
		WHEN SYSDATE - CREATE_DATE < 1/24
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24 * 60) || '분 전'
		WHEN SYSDATE - CREATE_DATE < 1
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24) || '시간 전'
		ELSE TO_CHAR(CREATE_DATE, 'YYYY-MM-DD')
			END CREATE_DATE,
			]]>
		(SELECT COUNT(*) FROM "REPLY" C

		WHERE C.BOARD_NO = B.BOARD_NO
		AND
		REPLY_DELETE = 'N') COMMENT_COUNT,

		(SELECT COUNT(*) FROM CONTENT_LIKE L
		WHERE L.BOARD_NO =
		B.BOARD_NO) LIKE_COUNT
		<!-- (SELECT IMG_PATH || IMG_RENAME FROM BOARD_IMG I WHERE I.BOARD_NO = 
			B.BOARD_NO AND IMG_ORDER = 0) THUMBNAIL -->

		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "TAG" USING (TAG_NO)
		WHERE BOARD_DELETE = 'N'
		AND BOARD_CODE = #{boardCode}
		ORDER BY BOARD_NO
		DESC

	</select>

	<!-- 이미지 리스트 -->
	<select id="selectImageList" resultMap="boardImage_rm">
		SELECT * FROM "BOARD_IMG"
		WHERE BOARD_NO=#{boardCode}
		ORDER BY IMG_ORDER
	</select>

	<!-- 나라게시판 게시글 -->
	<select id="countryList" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,TAG_CONTENT,
	<![CDATA[
	CASE  
		WHEN SYSDATE - CREATE_DATE < 1/24/60
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24 * 60 * 60 ) || '초 전'
		WHEN SYSDATE - CREATE_DATE < 1/24
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24 * 60) || '분 전'
		WHEN SYSDATE - CREATE_DATE < 1
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24) || '시간 전'
		ELSE TO_CHAR(CREATE_DATE, 'YYYY-MM-DD')
			END CREATE_DATE,
			]]>
		(SELECT COUNT(*) FROM "REPLY" C
		WHERE C.BOARD_NO = B.BOARD_NO)
		COMMENT_COUNT,
		(SELECT COUNT(*) FROM CONTENT_LIKE L
		WHERE L.BOARD_NO =
		B.BOARD_NO) LIKE_COUNT
		<!-- (SELECT IMG_PATH || IMG_RENAME FROM BOARD_IMG I WHERE I.BOARD_NO = 
			B.BOARD_NO AND IMG_ORDER = 0) THUMBNAIL -->

		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "TAG" USING (TAG_NO)
		WHERE BOARD_DELETE = 'N'
		AND BOARD_CODE = 1
		AND COUNTRY_NO =
		#{countryNo}
		ORDER BY BOARD_NO DESC

	</select>

	<!-- 게시글 내용 상세조회 -->
	<!--게시글 상세내용 -->
	<select id="selectBoard" resultMap="board_rm">
		SELECT
		BOARD_NO,BOARD_TITLE,BOARD_TEXT ,READ_COUNT,BOARD_CODE,TAG_NO,
		MEMBER_NICKNAME,MEMBER_NO ,PROFILE_IMG,
		TO_CHAR(CREATE_DATE,'YYYY"년"
		MM"월" DD"일" HH24:MI:SS') CREATE_DATE,
		TO_CHAR(UPDATE_DATE,'YYYY"년"
		MM"월" DD"일" HH24:MI:SS') UPDATE_DATE,
		(SELECT COUNT(*) FROM
		"CONTENT_LIKE" L
		WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT
		FROM "BOARD"
		B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DELETE='N'
		AND
		BOARD_CODE=#{boardCode}
		AND BOARD_NO=#{boardNo}
	</select>

	<!-- 여행게시판 상세글 조회 -->
	<select id="boardCountryDetail" resultMap="board_rm">
		SELECT
		BOARD_NO,BOARD_TITLE,BOARD_TEXT ,READ_COUNT,BOARD_CODE,TAG_CONTENT,
		MEMBER_NICKNAME,MEMBER_NO ,PROFILE_IMG,
		TO_CHAR(CREATE_DATE,'YYYY"년"
		MM"월" DD"일" HH24:MI:SS') CREATE_DATE,
		TO_CHAR(UPDATE_DATE,'YYYY"년"
		MM"월" DD"일" HH24:MI:SS') UPDATE_DATE,
		(SELECT COUNT(*) FROM
		"CONTENT_LIKE" L
		WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT
		FROM "BOARD"
		B
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "TAG" USING (TAG_NO)
		WHERE
		BOARD_DELETE='N'
		AND BOARD_CODE=1
		AND COUNTRY_NO = #{countryNo}
		AND
		BOARD_NO=#{boardNo}

	</select>


	<!-- 게시글 댓글 -->
	<select id="selectReplyList" resultMap="reply_rm">
		SELECT REPLY_NO , REPLY_CONTENT,
		TO_CHAR(REPLY_DATE, 'YYYY"년" MM"월"
		DD"일" HH24"시" MI"분" SS"초"') REPLY_DATE,
		BOARD_NO, MEMBER_NO,
		MEMBER_NICKNAME, PROFILE_IMG, PARENT_REPLY_NO,
		REPLY_DELETE
		FROM "REPLY"
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_NO = #{boardNo}
		AND
		REPLY_DELETE = 'N'
		ORDER BY REPLY_NO
		<!-- SELECT LEVEL,C.* FROM (SELECT REPLY_NO , REPLY_CONTENT, TO_CHAR(REPLY_DATE, 
			'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') REPLY_DATE, BOARD_NO, MEMBER_NO, 
			MEMBER_NICKNAME, PROFILE_IMG, PARENT_REPLY_NO, REPLY_DELETE FROM "REPLY" 
			JOIN MEMBER USING(MEMBER_NO) WHERE BOARD_NO = #{boardNo})C WHERE REPLY_DELETE 
			= 'N' START WITH PARENT_REPLY_NO IS NULL CONNECT BY PRIOR REPLY_NO = PARENT_REPLY_NO 
			ORDER SIBLINGS BY REPLY_NO -->
	</select>


	<!--좋아요 체크 -->
	<select id="boardLikeCheck" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM "CONTENT_LIKE"
		WHERE BOARD_NO = #{boardNo}
		AND
		MEMBER_NO = #{memberNo}
	</select>


	<!-- 좋아요 추가 -->
	<insert id="insertBoardLike">
		INSERT INTO "CONTENT_LIKE"
		VALUES(#{boardNo},${memberNo})

	</insert>
	<!-- 좋아요 삭제 -->
	<delete id="deleteBoardLike">
		DELETE FROM "CONTENT_LIKE"
		WHERE BOARD_NO=#{boardNo}
		AND MEMBER_NO= #{memberNo}
	</delete>

	<!-- 좋아요 수 -->
	<select id="countBoardLike" resultType="int">
		SELECT COUNT(*) FROM
		"CONTENT_LIKE" WHERE BOARD_NO = ${boardNo}

	</select>


	<!-- 조회수 증가 -->

	<update id="updateReadCount">
		UPDATE "BOARD" SET
		READ_COUNT = READ_COUNT + 1
		WHERE
		BOARD_NO = #{boardNo}
	</update>


	<!-- 특정 게시판의 삭제되지 않은 게시글 수 조회 + 검색 조건이 일치하는 게시글 수 조회 -->
	<select id="listCount_search" parameterType="int"
		resultType="int">
		SELECT COUNT(*) FROM "BOARD"
		<if test='key == "w"'>
			JOIN "MEMBER" USING(MEMBER_NO)
		</if>
		WHERE BOARD_DELETE='N'
		AND BOARD_CODE=#{boardCode}


		<choose>
			<when test='key == "t"'>
				<!-- 제목 -->
				AND BOARD_TITLE LIKE '%${query}%'
			</when>

			<when test='key =="c"'>
				<!-- 내용 -->
				AND BOARD_TEXT LIKE '%${query}%'
			</when>

			<when test='key == "tc"'>
				<!-- 제목 + 내용 -->
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_TEXT LIKE
				'%${query}%')
			</when>
			<when test='key == "w"'>
				<!-- 작성자(닉네임) -->
				AND MEMBER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>
	</select>

	<select id="selectBoardList_search" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,TAG_CONTENT,
	<![CDATA[
	CASE  
		WHEN SYSDATE - CREATE_DATE < 1/24/60
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24 * 60 * 60 ) || '초 전'
		WHEN SYSDATE - CREATE_DATE < 1/24
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24 * 60) || '분 전'
		WHEN SYSDATE - CREATE_DATE < 1
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24) || '시간 전'
		ELSE TO_CHAR(CREATE_DATE, 'YYYY-MM-DD')
			END CREATE_DATE,
			]]>
		(SELECT COUNT(*) FROM "REPLY" C
		WHERE C.BOARD_NO = B.BOARD_NO)
		COMMENT_COUNT,
		(SELECT COUNT(*) FROM CONTENT_LIKE L
		WHERE L.BOARD_NO =
		B.BOARD_NO) LIKE_COUNT
		<!-- (SELECT IMG_PATH || IMG_RENAME FROM BOARD_IMG I WHERE I.BOARD_NO = 
			B.BOARD_NO AND IMG_ORDER = 0) THUMBNAIL -->

		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "TAG" USING (TAG_NO)
		WHERE BOARD_DELETE = 'N'
		AND BOARD_CODE = #{boardCode}

		<choose>
			<when test='key == "t"'>
				<!-- 제목 -->
				AND BOARD_TITLE LIKE '%${query}%'
			</when>

			<when test='key =="c"'>
				<!-- 내용 -->
				AND BOARD_TEXT LIKE '%${query}%'
			</when>

			<when test='key == "tc"'>
				<!-- 제목 + 내용 -->
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_TEXT LIKE
				'%${query}%')
			</when>
			<when test='key == "w"'>
				<!-- 작성자(닉네임) -->
				AND MEMBER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>


		ORDER BY BOARD_NO DESC

	</select>


	<!-- 특정 게시판의 삭제되지 않은 게시글 수 조회 + 검색 조건이 일치하는 게시글 수 조회 -->
	<select id="listCount2_search" parameterType="int"
		resultType="int">
		SELECT COUNT(*) FROM "BOARD"
		<if test='key2 == "w"'>
			JOIN "MEMBER" USING(MEMBER_NO)
		</if>
		WHERE BOARD_DELETE='N'
		AND BOARD_CODE=1
		AND COUNTRY_NO = #{countryNo}
		<choose>
			<when test='key2 == "t"'>
				<!-- 제목 -->
				AND BOARD_TITLE LIKE '%${query}%'
			</when>

			<when test='key2 =="c"'>
				<!-- 내용 -->
				AND BOARD_TEXT LIKE '%${query}%'
			</when>

			<when test='key2 == "tc"'>
				<!-- 제목 + 내용 -->
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_TEXT LIKE
				'%${query}%')
			</when>
			<when test='key2 == "w"'>
				<!-- 작성자(닉네임) -->
				AND MEMBER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>
	</select>

	<!--여행게시판 검색 -->
	<select id="selectCountryList_search" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,TAG_CONTENT,
	<![CDATA[
	CASE  
		WHEN SYSDATE - CREATE_DATE < 1/24/60
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24 * 60 * 60 ) || '초 전'
		WHEN SYSDATE - CREATE_DATE < 1/24
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24 * 60) || '분 전'
		WHEN SYSDATE - CREATE_DATE < 1
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24) || '시간 전'
		ELSE TO_CHAR(CREATE_DATE, 'YYYY-MM-DD')
			END CREATE_DATE,
			]]>
		(SELECT COUNT(*) FROM "REPLY" C
		WHERE C.BOARD_NO = B.BOARD_NO)
		COMMENT_COUNT,
		(SELECT COUNT(*) FROM CONTENT_LIKE L
		WHERE L.BOARD_NO =
		B.BOARD_NO) LIKE_COUNT
		<!-- (SELECT IMG_PATH || IMG_RENAME FROM BOARD_IMG I WHERE I.BOARD_NO = 
			B.BOARD_NO AND IMG_ORDER = 0) THUMBNAIL -->

		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "TAG" USING (TAG_NO)
		WHERE BOARD_DELETE = 'N'
		AND BOARD_CODE = 1
		AND COUNTRY_NO =
		#{countryNo}

		<choose>
			<when test='key2 == "t"'>
				<!-- 제목 -->
				AND BOARD_TITLE LIKE '%${query}%'
			</when>

			<when test='key2 =="c"'>
				<!-- 내용 -->
				AND BOARD_TEXT LIKE '%${query}%'
			</when>

			<when test='key2 == "tc"'>
				<!-- 제목 + 내용 -->
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_TEXT LIKE
				'%${query}%')
			</when>
			<when test='key2 == "w"'>
				<!-- 작성자(닉네임) -->
				AND MEMBER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>
		ORDER BY BOARD_NO DESC

	</select>


	<!--전체 게시판의 삭제되지 않은 게시글 수 조회 + 검색 조건이 일치하는 게시글 수 조회 -->

	<select id="listCount3_search" parameterType="int"
		resultType="int">
		SELECT COUNT(*) FROM "BOARD"
		WHERE BOARD_DELETE='N'
		<choose>
			<when test='key3 == "t"'>
				<!-- 제목 -->
				AND BOARD_TITLE LIKE '%${query}%'
			</when>
			<when test='key3 =="c"'>
				<!-- 내용 -->
				AND BOARD_TEXT LIKE '%${query}%'
			</when>

			<when test='key3 == "tc"'>
				<!-- 제목 + 내용 -->
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_TEXT LIKE
				'%${query}%')
			</when>
			<when test='key3 == "w"'>
				<!-- 작성자(닉네임) -->
				AND MEMBER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>
	</select>

	<!-- 전체게시판 검색 -->
	<select id="selectAllList_search" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME,
		READ_COUNT,BOARD_CODE,COUNTRY_NO,TAG_NO,
	<![CDATA[
	CASE  
		WHEN SYSDATE - CREATE_DATE < 1/24/60
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24 * 60 * 60 ) || '초 전'
		WHEN SYSDATE - CREATE_DATE < 1/24
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24 * 60) || '분 전'
		WHEN SYSDATE - CREATE_DATE < 1
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24) || '시간 전'
		ELSE TO_CHAR(CREATE_DATE, 'YYYY-MM-DD')
			END CREATE_DATE,
			]]>
		(SELECT COUNT(*) FROM "REPLY" C
		WHERE C.BOARD_NO = B.BOARD_NO)
		COMMENT_COUNT,
		(SELECT COUNT(*) FROM CONTENT_LIKE L
		WHERE L.BOARD_NO =
		B.BOARD_NO) LIKE_COUNT
		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DELETE = 'N'

		<choose>
			<when test='key3 == "t"'>
				<!-- 제목 -->
				AND BOARD_TITLE LIKE '%${query}%'
			</when>
			<when test='key3 =="c"'>
				<!-- 내용 -->
				AND BOARD_TEXT LIKE '%${query}%'
			</when>

			<when test='key3 == "tc"'>
				<!-- 제목 + 내용 -->
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_TEXT LIKE
				'%${query}%')
			</when>
			<when test='key3 == "w"'>
				<!-- 작성자(닉네임) -->
				AND MEMBER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>
		ORDER BY BOARD_NO DESC
	</select>

	<select id="tagList" resultMap="board_rm">
		SELECT * FROM TAG
		ORDER BY TAG_NO
	</select>

	<select id="taglistCount" resultType="_int">
		SELECT COUNT(*) FROM "BOARD"
		WHERE BOARD_DELETE='N'
		AND BOARD_CODE=#{boardCode}
		AND TAG_NO=#{tagNo}
	</select>
	
	<select id="tagBoardList" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,TAG_CONTENT,
	<![CDATA[
	CASE  
		WHEN SYSDATE - CREATE_DATE < 1/24/60
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24 * 60 * 60 ) || '초 전'
		WHEN SYSDATE - CREATE_DATE < 1/24
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24 * 60) || '분 전'
		WHEN SYSDATE - CREATE_DATE < 1
		THEN FLOOR( (SYSDATE - CREATE_DATE) * 24) || '시간 전'
		ELSE TO_CHAR(CREATE_DATE, 'YYYY-MM-DD')
			END CREATE_DATE,
			]]>(SELECT
		COUNT(*)
		FROM "REPLY" C
		WHERE C.BOARD_NO = B.BOARD_NO)
		COMMENT_COUNT,(SELECT COUNT(*)
		FROM CONTENT_LIKE L
		WHERE L.BOARD_NO =
		B.BOARD_NO) LIKE_COUNT
		FROM "BOARD" B
		JOIN "MEMBER"
		USING(MEMBER_NO)
		JOIN
		"TAG"
		USING (TAG_NO)
		WHERE BOARD_DELETE = 'N'
		AND BOARD_CODE =
		#{boardCode}
		AND TAG_NO = #{tagNo}
		ORDER BY BOARD_NO
		DESC
	</select>
	
	<!-- 자유/질문 리스트 불러오기 -->
	<select id="boardTypeList" resultMap="board_rm">
		SELECT * FROM BOARD_TYPE
		WHERE BOARD_CODE =2
		or BOARD_CODE =3
		ORDER BY BOARD_CODE ASC
	</select>
	
	
	<select id="boardTypeList2" resultMap="board_rm">
		SELECT * FROM COUNTRY 
		WHERE COUNTRY_NO = 1
		OR  COUNTRY_NO = 2 
		OR  COUNTRY_NO = 3
		OR COUNTRY_NO = 4
		OR COUNTRY_NO = 5
		ORDER BY COUNTRY_NO ASC 
	</select>
	
	
	<select id="boardTypeList3" resultMap="board_rm">
		SELECT * FROM TAG  
		WHERE TAG_NO  = 1
		OR  TAG_NO = 2 
		OR  TAG_NO = 3
		OR TAG_NO = 4
		ORDER BY TAG_NO ASC
	</select>
	
	<select id="writingList" resultMap="board_rm">
		SELECT BOARD_CODE, BOARD_NAME FROM (
			SELECT BOARD_TYPE.* , '1' TEMP FROM BOARD_TYPE 
			WHERE BOARD_CODE NOT IN (1,4)
			UNION 
			SELECT COUNTRY.*, '2' TEMP FROM COUNTRY 
			WHERE COUNTRY_NO != 0
		)
		ORDER BY TEMP, BOARD_CODE
	</select>
	
</mapper>
